"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See LICENSE in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeDockerListImageRecord = exports.isDockerListImageRecord = void 0;
const dayjs_1 = require("../../utils/dayjs");
const parseDockerLikeImageName_1 = require("../../utils/parseDockerLikeImageName");
const tryParseSize_1 = require("./tryParseSize");
function isDockerListImageRecord(maybeImage) {
    const image = maybeImage;
    if (!image || typeof image !== 'object') {
        return false;
    }
    if (typeof image.ID !== 'string') {
        return false;
    }
    if (typeof image.Repository !== 'string') {
        return false;
    }
    if (typeof image.Tag !== 'string') {
        return false;
    }
    if (typeof image.CreatedAt !== 'string') {
        return false;
    }
    if (typeof image.Size !== 'string' && typeof image.Size !== 'number') {
        return false;
    }
    return true;
}
exports.isDockerListImageRecord = isDockerListImageRecord;
function normalizeDockerListImageRecord(image) {
    const createdAt = dayjs_1.dayjs.utc(image.CreatedAt).toDate();
    const size = (0, tryParseSize_1.tryParseSize)(image.Size);
    const repositoryAndTag = `${image.Repository}${image.Tag ? `:${image.Tag}` : ''}`;
    return {
        id: image.ID,
        image: (0, parseDockerLikeImageName_1.parseDockerLikeImageName)(repositoryAndTag),
        // labels: {}, // TODO: image labels are conspicuously absent from Docker image listing output
        createdAt,
        size,
    };
}
exports.normalizeDockerListImageRecord = normalizeDockerListImageRecord;
//# sourceMappingURL=DockerListImageRecord.js.map