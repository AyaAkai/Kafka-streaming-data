"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See LICENSE in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.parsePruneLikeOutput = void 0;
const tryParseSize_1 = require("./tryParseSize");
// default regex to parse the space reclaimed
const PruneSpaceReclaimedRegex = /^Total reclaimed space:\s+([\w\s.]+)$/igm;
const ResourceRegex = /^(\w+)$/igm;
function parsePruneLikeOutput(output, options) {
    var _a;
    const resourceRegex = (options === null || options === void 0 ? void 0 : options.resourceRegex) || ResourceRegex;
    const deletedResources = [];
    let spaceReclaimed = 0;
    // match resources
    resourceRegex.lastIndex = 0;
    let result;
    while ((result = resourceRegex.exec(output)) && result.length >= 2) {
        deletedResources.push(result[1]);
    }
    // match space reclaimed
    PruneSpaceReclaimedRegex.lastIndex = 0;
    const spaceMatched = (_a = PruneSpaceReclaimedRegex.exec(output)) === null || _a === void 0 ? void 0 : _a[0];
    spaceReclaimed = (0, tryParseSize_1.tryParseSize)(spaceMatched) || 0;
    return {
        spaceReclaimed: spaceReclaimed,
        resources: deletedResources,
    };
}
exports.parsePruneLikeOutput = parsePruneLikeOutput;
//# sourceMappingURL=parsePruneLikeOutput.js.map